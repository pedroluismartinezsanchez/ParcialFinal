/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import Excepcion.DatoInvalidoExcepcion;
import controlador.HistorialClinicoControlador;
import transferencia.HistorialClinicoDTO;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.util.List;

public class FormHistorialClinico extends JFrame {

    private JTextField txtIdMascota, txtDescripcion, txtTratamiento;
    private JTable tablaHistorial;
    private DefaultTableModel modeloTabla;

    private final HistorialClinicoControlador controlador = new HistorialClinicoControlador();

    public FormHistorialClinico() {
        setTitle("Historial Clínico de Mascotas");
        setSize(700, 500);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setLayout(new BorderLayout());

        initUI();
    }

    private void initUI() {
        JPanel panelFormulario = new JPanel(new GridLayout(5, 2, 5, 5));
        panelFormulario.setBorder(BorderFactory.createTitledBorder("Registrar Entrada al Historial"));

        panelFormulario.add(new JLabel("ID de Mascota:"));
        txtIdMascota = new JTextField();
        panelFormulario.add(txtIdMascota);

        panelFormulario.add(new JLabel("Descripción:"));
        txtDescripcion = new JTextField();
        panelFormulario.add(txtDescripcion);

        panelFormulario.add(new JLabel("Tratamiento:"));
        txtTratamiento = new JTextField();
        panelFormulario.add(txtTratamiento);

        JButton btnRegistrar = new JButton("Registrar Entrada");
        btnRegistrar.addActionListener(e -> registrarEntrada());
        panelFormulario.add(btnRegistrar);

        JButton btnConsultar = new JButton("Consultar Historial");
        btnConsultar.addActionListener(e -> consultarHistorial());
        panelFormulario.add(btnConsultar);

        add(panelFormulario, BorderLayout.NORTH);

        modeloTabla = new DefaultTableModel(new Object[]{"ID", "Fecha", "Descripción", "Tratamiento"}, 0);
        tablaHistorial = new JTable(modeloTabla);
        JScrollPane scroll = new JScrollPane(tablaHistorial);
        scroll.setBorder(BorderFactory.createTitledBorder("Historial Clínico"));

        JPanel panelInferior = new JPanel(new FlowLayout(FlowLayout.RIGHT));
        JButton btnVolver = new JButton("Volver al Menú Principal");
        btnVolver.addActionListener(e -> {
            dispose();
            new MenuPrincipal().setVisible(true);
        });
        panelInferior.add(btnVolver);

        add(panelInferior, BorderLayout.SOUTH);
        add(scroll, BorderLayout.CENTER);
    }

    private void registrarEntrada() {
        String idMascota = txtIdMascota.getText().trim();
        String descripcion = txtDescripcion.getText().trim();
        String tratamiento = txtTratamiento.getText().trim();

        try {
            controlador.registrarEntrada(idMascota, descripcion, tratamiento);
            JOptionPane.showMessageDialog(this, "Entrada registrada exitosamente.");
            txtDescripcion.setText("");
            txtTratamiento.setText("");
            consultarHistorial(); // refrescar historial
        } catch (DatoInvalidoExcepcion e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void consultarHistorial() {
        String idMascota = txtIdMascota.getText().trim();
        if (idMascota.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe ingresar el ID de la mascota.");
            return;
        }

        List<HistorialClinicoDTO> historial = controlador.listarPorMascota(idMascota);
        modeloTabla.setRowCount(0); // limpiar tabla

        for (HistorialClinicoDTO h : historial) {
            modeloTabla.addRow(new Object[]{
                h.getId(),
                h.getFecha(),
                h.getDescripcion(),
                h.getTratamiento()
            });
        }

        if (historial.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No se encontraron entradas para esta mascota.");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormHistorialClinico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormHistorialClinico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormHistorialClinico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormHistorialClinico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormHistorialClinico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
